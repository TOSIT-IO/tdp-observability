# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
#######################################################################
# TEMPORARY                                                           #
# Remove after the vars are tracked in tdp_vars_defaults/tdp_cluster  #
#######################################################################

# Cluster name
cluster_name: mycluster

#######################################################################
# TEMPORARY                                                           #
# Remove after the vars are tracked in tdp_vars_defaults/tdp_cluster  #
#######################################################################

tdp_observability_root_dir: "{{ tdp_root_dir }}"
# Grafana ports
grafana_web_port: 3000

# Prometheus ports
prometheus_web_port: 9090

# Prometheus basicAuth
prometheus_admin_user: admin
prometheus_admin_password: PrometheusAdmin123

# Alertmanager basicAuth
alertmanager_admin_user: admin
alertmanager_admin_password: AlertAdmin123

# Loki ports
loki_web_port: 3100
loki_grpc_port: 9096

# Node Exporter port
exporter_node_http_port: 9100

#################################
# Service & Component logs dirs #
#################################
node_exporter_log_dir: /var/log/node-exporter
node_exporter_log_file: node-exporter.log
node_exporter_group: node-exporter

grafana_log_dir: /var/log/grafana
grafana_log_file: "grafana.log"     # do not change. Grafana forces this filename. Variable is here only for alloy
grafana_group: "{{ hadoop_group }}"

alloy_group: alloy
alloy_log_dir: /var/log/alloy
alloy_log_file: alloy.log

loki_log_dir: /var/log/loki
loki_log_file: loki.log
loki_group: "{{ hadoop_group }}"

prometheus_log_dir: /var/log/prometheus
prometheus_log_file: prometheus.log
prometheus_group: "{{ hadoop_group }}"

alertmanager_log_dir: /var/log/alertmanager
alertmanager_log_file: alertmanager.log
alertmanager_group: "{{ hadoop_group }}"

observability_common_labels: {}
#  cluster: "{{ cluster_name }}"

#
# observability_tdp_targets structure :
# service_name
#    +--- component_name
#              +---- group : name of the ansible group that runs this component.
#              |             Optional : should be specified only if not equal
#              |             to '{{ service_name }}_{{ component_name }}'
#              +---- jobs  : list of scrape jobs to configure
#
# each job has the following entries :
# - exporter_port              : exporter service port - for prometheus job
# - log_file                   : log file path - for alloy job
# - name_suffix                : mandatory if more than one job :
#                                job_name in prometheus or alloy scrapes will be
#                                equal to '{{ service }}_{{ component }}_{{ suffix }}
# - prometheus_scrape_options  : options passed to prometheus scrape
#                                cf. https://prometheus.io/docs/prometheus/latest/configuration/configuration
# - alloy_pipeline             : can be either a pipeline dictionary as specified in
#                                cf. https://grafana.com/docs/alloy/latest/reference/components/loki/loki.process/
#                                or a string, key to a predefined pipeline from the "alloy_pipelines" dictionary
#                                defined in "tdp_vars_default/grafana/grafana_alloy.yml"
#                                default pipeline is alloy_pipelines['default']
#
# Additionaly :
# - labels can be applied to scrapes and defined at any level of the configuration tree
# - enabled: jobs can be disabled by setting 'enabled' key to false.
#
# example:
# service:
#   component:
#     jobs:
#       - log_file: /var/log/foo/foo.log
#         alloy:
#           - multiline:
#               firstline: '^\\d{4}-\\d{2}-\\d{2}[T]\\d{2}:\\d{2}:\\d{2}'
#       - exporter_port: 8888
#         prometheus_scrape_options:
#           scrape_interval: 10s
#           scheme: https
#           tls_config:
#             ca_file: "{{ ca_file }}"
#
dashboard_with_workers: "service02/service-components-and-workers"
dashboard_without_workers: "service01/service-components"
dashboard_python: "service03/python-process"

observability_tdp_targets:
  grafana:
    labels:
      type: tdp_observability
    server:
      unix_group: "{{ grafana_group }}"
      group: grafana
      jobs:
        - log_file: "{{ grafana_log_dir }}/{{ grafana_log_file }}"
          alloy_pipeline:
            - logfmt:
                mapping:
                  datetime: "t"
                  level: ""
            - timestamp:
                source: "datetime"
                format: "RFC3339"
            - labels:
                values:
                  level: ""

  exporter:
    unix_group: "{{ node_exporter_group }}"
    node:
      jobs:
        - exporter_port: "{{ exporter_node_http_port }}"
          labels:
            type: tdp_infra
        - log_file: "{{ node_exporter_log_dir }}/{{ node_exporter_log_file }}"
          alloy_pipeline: observability
          labels:
            type: tdp_observability
  prometheus:
    unix_group: "{{ prometheus_group }}"
    server:
      group: prometheus
      jobs:
        - log_file: "{{ prometheus_log_dir }}/{{ prometheus_log_file }}"
          alloy_pipeline: observability
          labels:
            type: tdp_observability
  loki:
    server:
      unix_group: "{{ loki_group }}"
      group: loki
      jobs:
        - log_file: "{{ loki_log_dir }}/{{ loki_log_file }}"
          alloy_pipeline: observability
          labels:
            type: tdp_observability
  alloy:
    agent:
      unix_group: "{{ alloy_group }}"
      group: alloy
      jobs:
        - log_file: "{{ alloy_log_dir }}/{{ alloy_log_file }}"
          alloy_pipeline: observability
          labels:
            type: tdp_observability
