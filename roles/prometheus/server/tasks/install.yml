# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Preflight
  ansible.builtin.include_tasks:
    file: preflight.yml

- name: Ensure prometheus group exists
  ansible.builtin.group:
    name: "{{ prometheus_group }}"
    system: true

- name: Ensure prometheus user exists
  ansible.builtin.user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    shell: "/usr/sbin/nologin"
    home: "{{ prometheus_db_dir }}"
    system: true
    createhome: false

- name: Create data directory
  ansible.builtin.file:
    path: "{{ prometheus_db_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "755"

- name: Create configuration directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: "{{ prometheus_group }}"
    mode: "750"
  loop:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/rules"

- name: Create log directory
  ansible.builtin.file:
    path: "{{ prometheus_log_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: "750"

- name: Upload {{ prometheus_dist_file }}
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ prometheus_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: "Ensure directory exists: {{ prometheus_root_dir }}"
  ansible.builtin.file:
    path: "{{ prometheus_root_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Extract {{ prometheus_dist_file }}
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ prometheus_dist_file }}"
    dest: "{{ prometheus_root_dir }}"
    group: root
    owner: root
    mode: "755"
    remote_src: true
    creates: "{{ prometheus_root_dir }}/{{ prometheus_release }}"

- name: Create symbolic link to Prometheus installation
  ansible.builtin.file:
    src: "{{ prometheus_root_dir }}/{{ prometheus_release }}"
    dest: "{{ prometheus_install_dir }}"
    state: link

- name: Symlink prometheus and promtool binaries
  ansible.builtin.file:
    src: "{{ prometheus_install_dir }}/{{ item }}"
    dest: "{{ _prometheus_binary_install_dir }}/{{ item }}"
    state: link
  loop:
    - prometheus
    - promtool

- name: Template prometheus logrotate file
  ansible.builtin.template:
    src: prometheus.logrotate.j2
    dest: "/etc/logrotate.d/prometheus"
    group: root
    owner: root
    mode: "644"

- name: Template Prometheus service file
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: /usr/lib/systemd/system/prometheus.service
    owner: root
    group: root
    mode: "644"
  notify: systemctl daemon-reload
