# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Ensure node exporter's group exists    # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: tosit.tdp.utils.group
  vars:
    group: "{{ node_exporter_group }}"

- name: Ensure node exporter's user exists     # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"

- name: "Upload {{ node_exporter_dist_file }}"
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ node_exporter_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: "Ensure directory exists : {{ node_exporter_root_dir }}"
  ansible.builtin.file:
    path: "{{ node_exporter_root_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: "Extract {{ node_exporter_dist_file }}"
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ node_exporter_dist_file }}"
    dest: "{{ node_exporter_root_dir }}"
    group: root
    owner: root
    mode: "755"
    remote_src: true
    creates: "{{ node_exporter_root_dir }}/{{ node_exporter_release }}"

- name: Create symbolic link to node_exporter installation
  ansible.builtin.file:
    src: "{{ node_exporter_root_dir }}/{{ node_exporter_release }}"
    dest: "{{ node_exporter_install_dir }}"
    state: link

- name: Create directory for pid
  ansible.builtin.file:
    path: "{{ node_exporter_pid_dir }}"
    state: directory
    group: root
    owner: root
    mode: "755"

- name: Template node-exporter tmpfiles.d
  ansible.builtin.template:
    src: tmpfiles-node-exporter.conf.j2
    dest: /etc/tmpfiles.d/node-exporter.conf
    group: root
    owner: root
    mode: "644"

- name: Template node-exporter service file
  ansible.builtin.template:
    src: node-exporter.service.j2
    dest: /usr/lib/systemd/system/node-exporter.service
    group: root
    owner: root
    mode: "644"
  notify: systemctl daemon-reload
