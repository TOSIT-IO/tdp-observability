# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: Ensure postgres exporter's group exists    # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: tosit.tdp.utils.group
  vars:
    group: "{{ postgres_exporter_group }}"

- name: Ensure postgres exporter's user exists     # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ postgres_exporter_user }}"
    group: "{{ postgres_exporter_group }}"

- name: "Upload {{ postgres_exporter_dist_file }}"
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ postgres_exporter_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: "Ensure directory : {{ postgres_exporter_root_dir }}"
  ansible.builtin.file:
    path: "{{ postgres_exporter_root_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: "Extract {{ postgres_exporter_dist_file }}"
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ postgres_exporter_dist_file }}"
    dest: "{{ postgres_exporter_root_dir }}"
    group: root
    owner: root
    mode: "755"
    remote_src: true
    creates: "{{ postgres_exporter_root_dir }}/{{ postgres_exporter_release }}"

- name: Create symbolic link to postgres-exporter installation
  ansible.builtin.file:
    src: "{{ postgres_exporter_root_dir }}/{{ postgres_exporter_release }}"
    dest: "{{ postgres_exporter_install_dir }}"
    state: link

- name: Create symbolic link to postgres-exporter executable file
  ansible.builtin.file:
    src: "{{ postgres_exporter_install_dir }}/postgres_exporter"
    dest: "/usr/local/bin/postgres_exporter"
    state: link

- name: Create working directory
  ansible.builtin.file:
    path: "{{ postgres_exporter_work_dir }}"
    state: directory
    group: "{{ postgres_exporter_group }}"
    owner: "{{ postgres_exporter_user }}"
    mode: "750"

- name: Create log directory
  ansible.builtin.file:
    path: "{{ postgres_exporter_log_dir }}"
    state: directory
    group: "{{ postgres_exporter_group }}"
    owner: "{{ postgres_exporter_user }}"
    mode: "750"

- name: Template postgres-exporter env file
  ansible.builtin.template:
    src: postgres-exporter.env.j2
    dest: "{{ postgres_exporter_install_dir }}/postgres-exporter.env"
    group: root
    owner: root
    mode: "640"

- name: Template postgres-exporter logrotate file
  ansible.builtin.template:
    src: postgres-exporter.logrotate.j2
    dest: "/etc/logrotate.d/postgres-exporter"
    group: root
    owner: root
    mode: "644"

- name: Template postgres-exporter service file
  ansible.builtin.template:
    src: postgres-exporter.service.j2
    dest: /usr/lib/systemd/system/postgres-exporter.service
    group: root
    owner: root
    mode: "644"
  notify: systemctl daemon-reload
