# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- name: "Ensure loki's group exists"   # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: tosit.tdp.utils.group
  vars:
    group: "{{ loki_group }}"

- name: "Ensure loki's user exists"    # noqa var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ loki_user }}"
    group: "{{ loki_group }}"

- name: "Upload {{ loki_dist_file }}"
  ansible.builtin.copy:
    src: "{{ binaries_local_dir }}/{{ loki_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: "Ensure directory loki_release exists"
  ansible.builtin.file:
    path: "{{ loki_root_dir }}/{{ loki_release }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: "Extract {{ loki_dist_file }}"
  ansible.builtin.unarchive:
    src: "{{ binaries_upload_dir }}/{{ loki_dist_file }}"
    dest: "{{ loki_root_dir }}/{{ loki_release }}"
    group: root
    owner: root
    mode: "755"
    remote_src: true
    creates: "{{ loki_root_dir }}/{{ loki_release }}/loki-linux-amd64"

- name: Create symbolic link to loki installation
  ansible.builtin.file:
    src: "{{ loki_root_dir }}/{{ loki_release }}"
    dest: "{{ loki_install_dir }}"
    state: link

- name: Ensure loki data and log directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ loki_user }}"
    group: "{{ loki_group }}"
    mode: "750"
  with_items:
    - "{{ loki_data_dir }}"
    - "{{ loki_log_dir }}"

- name: "Ensure directory exists : {{ loki_conf_dir }}"
  ansible.builtin.file:
    path: "{{ loki_conf_dir }}"
    state: directory
    owner: "{{ loki_user }}"
    group: "{{ loki_group }}"
    mode: "755"

- name: Template loki logrotate file
  ansible.builtin.template:
    src: loki.logrotate.j2
    dest: "/etc/logrotate.d/loki"
    group: root
    owner: root
    mode: "644"

- name: Template loki service file
  ansible.builtin.template:
    src: loki.service.j2
    dest: /usr/lib/systemd/system/loki.service
    group: root
    owner: root
    mode: "644"
  notify: systemctl daemon-reload
