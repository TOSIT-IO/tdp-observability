# Copyright 2022 TOSIT.IO
# SPDX-License-Identifier: Apache-2.0

---
- include_role:
    name: cloudalchemy.grafana
    tasks_from: preflight

- name: Ensure grafana's group exists
  include_role:
    name: tosit.tdp.utils.group
  vars:
    group: "{{ grafana_group }}"

- name: Ensure grafana's user exists
  include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ grafana_user }}"
    group: "{{ grafana_group }}"

- name: Upload {{ grafana_dist_file }}
  copy:
    src: "{{ binaries_local_dir }}/{{ grafana_dist_file }}"
    dest: "{{ binaries_upload_dir }}"
    owner: root
    group: root
    mode: "644"
  diff: false

- name: Ensure {{ grafana_root_dir }} exists
  file:
    path: "{{ grafana_root_dir }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Ensure {{ grafana_root_dir }}/{{ grafana_release }} exists
  file:
    path: "{{ grafana_root_dir }}/{{ grafana_release }}"
    state: directory
    owner: root
    group: root
    mode: "755"

- name: Extract {{ grafana_dist_file }}
  unarchive:
    src: "{{ binaries_upload_dir }}/{{ grafana_dist_file }}"
    dest: "{{ grafana_root_dir }}/{{ grafana_release }}"
    owner: root
    group: root
    mode: "755"
    remote_src: true
    extra_opts: "--strip-components=1"

- name: Create symbolic link to Grafana installation
  file:
    src: "{{ grafana_root_dir }}/{{ grafana_release }}"
    dest: "{{ grafana_install_dir }}"
    state: link

- name: Symlink grafana-server and grafana-cli binaries
  file:
    src: "{{ grafana_install_dir }}/bin/{{ item }}"
    dest: "{{ grafana_binary_install_dir }}/{{ item }}"
    state: link
  loop:
    - grafana-server
    - grafana-cli

- name: Ensure {{ grafana_config_dir }} exists
  file:
    path: "{{ grafana_config_dir }}"
    state: directory
    group: "{{ grafana_group }}"
    owner: root
    mode: "770"

- name: Ensure {{ grafana_config_dir }}/provisioning/* exists
  file:
    path: "{{ grafana_config_dir }}/{{ item }}"
    state: directory
    group: "{{ grafana_group }}"
    owner: root
    mode: "770"
  loop:
    - provisioning/access-control
    - provisioning/alerting
    - provisioning/dashboards
    - provisioning/datasources
    - provisioning/notifiers
    - provisioning/plugins

- name: Copy user config files
  copy:
    src: "{{ grafana_install_dir }}/conf/{{ item.src }}"
    dest: "{{ grafana_config_dir }}/{{ item.dest }}"
    group: "{{ grafana_group }}"
    owner: root
    mode: "660"
    remote_src: true
  with_items: "{{ grafana_config_files }}"

- name: Ensure {{ grafana_data_dir }} exists
  file:
    path: "{{ grafana_data_dir }}"
    state: directory
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: "750"

- name: Ensure {{ grafana_logs_dir }} exists
  file:
    path: "{{ grafana_logs_dir }}"
    state: directory
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: "755"

- name: Template grafana-server sysconfig file
  template:
    src: grafana-server.sysconfig.j2
    dest: /etc/sysconfig/grafana-server
    group: root
    owner: root
    mode: "644"

- name: Template grafana-server service file
  template:
    src: grafana-server.service.j2
    dest: /usr/lib/systemd/system/grafana-server.service
    group: root
    owner: root
    mode: "644"
  notify:
  - systemctl daemon-reload
